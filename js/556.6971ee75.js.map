{"version":3,"file":"js/556.6971ee75.js","mappings":"2KAGIA,E,SCDEC,EAAe,SAAAC,GAAK,OAAC,QAAa,mBAAmBA,EAAEA,KAAI,UAAcA,GACzEC,EAA2BF,GAAa,WAAmB,WAAAG,GAAoB,SAAU,CAAEC,GAAI,WAAa,MAAO,MACnHC,EAAa,CACjBH,GAGK,SAASI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQ,WAAc,QAAoB,MAAO,KAAMP,GDJzD,OAAe,QAAgB,CAC7BQ,QAAA,WACE,IAAMC,EAASC,SAASC,eAAe,WACjCC,EAAMH,EAAOI,WAAW,MACxBC,EAAgBL,EAAOM,MAAQ,IAC/BC,EAAiBP,EAAOQ,OAAS,IACjCC,EAAe,GACjBC,EAAY,EAEhB,aAcE,aAbA,oC,gDAAQ,IAAIC,QACZ,oC,gDAAwB,EAAhBC,KAAKC,SAAe,IAC5B,0C,gDAAc,MACd,2C,gDAAe,MACf,oC,gDAAQC,KAAKC,YAAc,IAC3B,qC,gDAASD,KAAKE,aAAe,IAC7B,gC,gDAAIJ,KAAKC,UAAYb,EAAOM,MAAQQ,KAAKR,SACzC,gC,gDAAIM,KAAKC,UAAYb,EAAOQ,OAASM,KAAKN,UAC1C,oC,gDAAQ,IACR,wC,gDAAYI,KAAKK,MAAsB,EAAhBL,KAAKC,SAAe,KAC3C,mC,gDAAOD,KAAKC,UAAYb,EAAOM,MAAQQ,KAAKR,SAC5C,mC,gDAAOM,KAAKC,UAAYb,EAAOQ,OAASM,KAAKN,UAC7C,uC,gDAAWI,KAAKK,MAAsB,IAAhBL,KAAKC,SAAiB,MAE1CC,KAAKI,MAAMC,IAAM,iCAoCrB,O,4FAlCE,WACMT,EAAYI,KAAKM,WAAa,IAChCN,KAAKO,KAAOT,KAAKC,UAAYb,EAAOM,MAAQQ,KAAKR,OACjDQ,KAAKQ,KAAOV,KAAKC,UAAYb,EAAOQ,OAASM,KAAKN,SAEpD,IAAIe,EAAKT,KAAKU,EAAIV,KAAKO,KACnBI,EAAKX,KAAKY,EAAIZ,KAAKQ,KAEvBR,KAAKU,GAAKD,EAAK,GACfT,KAAKY,GAAKD,EAAK,GAIXX,KAAKU,EAAIV,KAAKR,MAAQ,IACxBQ,KAAKU,EAAIxB,EAAOM,OAGdI,EAAYI,KAAKa,YAAc,IACjCb,KAAKc,MAAQ,EAAKd,KAAKc,MAAQ,EAAMd,KAAKc,OAAS,M,0FAGvD,WACEzB,EAAI0B,UACFf,KAAKI,MACLJ,KAAKc,MAAQd,KAAKC,YAClB,EACAD,KAAKC,YACLD,KAAKE,aACLF,KAAKU,EACLV,KAAKY,EACLZ,KAAKR,MACLQ,KAAKN,WAGX,EAnDA,GAqDMsB,EAAUC,EAActB,GAE9B,SAASuB,IACP7B,EAAI8B,UAAU,EAAG,EAAG5B,EAAcE,GAElCuB,EAAQI,SAAQ,SAACC,GACfA,EAAMC,SACND,EAAME,UAGR3B,IACAzB,EAAMqD,sBAAsBN,GAK9B,SAASD,EAAc5C,GAErB,IADA,IAAM2C,EAAU,GACPS,EAAI,EAAGA,EAAIpD,EAAGoD,IACrBT,EAAQU,KAAK,IAAIC,GAEnB,OAAOX,EAPTE,KAUFU,UAAS,WACPC,qBAAqB1D,M,SErFzB,MAAM2D,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASpD,GAAQ,CAAC,YAAY,qBAEzF","sources":["webpack://vue-default-ts/./src/pages/EnemyMovement.vue?4398","webpack://vue-default-ts/./src/pages/EnemyMovement.vue?d16f","webpack://vue-default-ts/./src/pages/EnemyMovement.vue"],"sourcesContent":["\nimport { defineComponent } from \"vue\";\n\nlet raf: number;\n\nexport default defineComponent({\n  mounted() {\n    const canvas = document.getElementById(\"canvas1\") as HTMLCanvasElement;\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    const CANVAS_WIDTH = (canvas.width = 500);\n    const CANVAS_HEIGHT = (canvas.height = 500);\n    const enemyCounter = 20;\n    let gameFrame = 5;\n\n    class Enemy {\n      image = new Image();\n      speed = Math.random() * 4 + 1;\n      spriteWidth = 213;\n      spriteHeight = 213;\n      width = this.spriteWidth / 3;\n      height = this.spriteHeight / 2;\n      x = Math.random() * (canvas.width - this.width);\n      y = Math.random() * (canvas.height - this.height);\n      frame = 0;\n      flapSpeed = Math.floor(Math.random() * 3 + 1);\n      newX = Math.random() * (canvas.width - this.width);\n      newY = Math.random() * (canvas.height - this.height);\n      interval = Math.floor(Math.random() * 200 + 50);\n      constructor() {\n        this.image.src = \"./resourses/sprites/enemy4.png\";\n      }\n      update() {\n        if (gameFrame % this.interval === 0) {\n          this.newX = Math.random() * (canvas.width - this.width);\n          this.newY = Math.random() * (canvas.height - this.height);\n        }\n        let dx = this.x - this.newX;\n        let dy = this.y - this.newY;\n\n        this.x -= dx / 20;\n        this.y -= dy / 20;\n\n        // this.x = 0;\n        // this.y = 0;\n        if (this.x + this.width < 0) {\n          this.x = canvas.width;\n        }\n\n        if (gameFrame % this.flapSpeed === 0) {\n          this.frame > 4 ? (this.frame = 0) : (this.frame += 1);\n        }\n      }\n      draw() {\n        ctx.drawImage(\n          this.image,\n          this.frame * this.spriteWidth,\n          0,\n          this.spriteWidth,\n          this.spriteHeight,\n          this.x,\n          this.y,\n          this.width,\n          this.height\n        );\n      }\n    }\n\n    const enemies = createEnemies(enemyCounter);\n\n    function animate() {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n      enemies.forEach((enemy) => {\n        enemy.update();\n        enemy.draw();\n      });\n\n      gameFrame++;\n      raf = requestAnimationFrame(animate);\n    }\n\n    animate();\n\n    function createEnemies(n: number) {\n      const enemies = [];\n      for (let i = 0; i < n; i++) {\n        enemies.push(new Enemy());\n      }\n      return enemies;\n    }\n  },\n  unmounted() {\n    cancelAnimationFrame(raf);\n  },\n});\n","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-05b1f0de\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"canvas\", { id: \"canvas1\" }, null, -1))\nconst _hoisted_2 = [\n  _hoisted_1\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, _hoisted_2))\n}","import { render } from \"./EnemyMovement.vue?vue&type=template&id=05b1f0de&scoped=true&ts=true\"\nimport script from \"./EnemyMovement.vue?vue&type=script&lang=ts\"\nexport * from \"./EnemyMovement.vue?vue&type=script&lang=ts\"\n\nimport \"./EnemyMovement.vue?vue&type=style&index=0&id=05b1f0de&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/runner/work/canvas-game-tutorial/canvas-game-tutorial/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-05b1f0de\"]])\n\nexport default __exports__"],"names":["raf","_withScopeId","n","_hoisted_1","_","id","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","mounted","canvas","document","getElementById","ctx","getContext","CANVAS_WIDTH","width","CANVAS_HEIGHT","height","enemyCounter","gameFrame","Image","Math","random","this","spriteWidth","spriteHeight","floor","image","src","interval","newX","newY","dx","x","dy","y","flapSpeed","frame","drawImage","enemies","createEnemies","animate","clearRect","forEach","enemy","update","draw","requestAnimationFrame","i","push","Enemy","unmounted","cancelAnimationFrame","__exports__"],"sourceRoot":""}