{"version":3,"file":"js/83.6ef74ee0.js","mappings":"yKAGIA,E,SCDEC,EAAe,SAAAC,GAAK,OAAC,QAAa,mBAAmBA,EAAEA,KAAI,UAAcA,GACzEC,EAA2BF,GAAa,WAAmB,WAAAG,GAAoB,MAAO,CAAEC,MAAO,aAAe,EACrG,QAAiB,yCACjB,IAAAD,GAAoB,OACpB,QAAiB,0BAC5B,MAEG,SAASE,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQ,WAAc,QAAoB,MAAO,KAAM,CACrDT,GACA,IAAAC,GAAoB,SAAU,CAC5BS,QAASL,EAAO,KAAOA,EAAO,GAEpC,W,IAAC,sDAAY,OAACD,EAAKO,eAAiBP,EAAKO,cAAa,MAAlBP,EAAsBQ,KACpDC,GAAI,cDZV,IAAMC,EAA0B,GAChC,aAWE,WACSC,EACAC,EACAC,G,gFAFAF,I,gFACAC,I,kFACAC,IAbT,0C,gDAAc,MACd,2C,gDAAe,MACf,oC,gDAAQC,KAAKC,YAAc,IAC3B,qC,gDAASD,KAAKE,aAAe,IAC7B,oC,gDAAQ,IAAIC,QACZ,oC,gDAAQ,IACR,oC,gDAAQ,IACR,oC,gDAAwB,IAAhBC,KAAKC,WACb,oC,gDAAQ,IAAIC,MAAM,0CAOhBN,KAAKO,MAAMC,IAAM,+BACjBR,KAAKS,MAAMC,OAAS,GA4BxB,O,4FAzBE,WACqB,IAAfV,KAAKW,OAAaX,KAAKS,MAAMG,OACjCZ,KAAKa,QACDb,KAAKa,MAAQ,KAAO,GACtBb,KAAKW,W,0FAIT,WACEX,KAAKD,IAAIe,OACTd,KAAKD,IAAIgB,UAAUf,KAAKH,EAAGG,KAAKF,GAChCE,KAAKD,IAAIiB,OAAOhB,KAAKiB,OACrBjB,KAAKD,IAAImB,UACPlB,KAAKO,MACLP,KAAKC,YAAcD,KAAKW,MACxB,EACAX,KAAKC,YACLD,KAAKE,aACL,EAAIF,KAAKmB,MAAQ,EACjB,EAAInB,KAAKoB,OAAS,EAClBpB,KAAKmB,MACLnB,KAAKoB,QAEPpB,KAAKD,IAAIsB,aAEb,EA7CA,GA+CA,GAAe,QAAgB,CAC7BC,KAAA,WACE,MAAO,CACLvB,IAAK,OAGTwB,QAAS,CACP9B,cAAA,SAAc+B,GACZC,QAAQC,IAAI,aAAc9B,GACtBI,KAAKD,KACPH,EAAW+B,KAAK,IAAIC,EAAUJ,EAAEK,QAASL,EAAEM,QAAS9B,KAAKD,QAI/DgC,QAAA,WACE,IAAMC,EAASC,SAASC,eAAe,WACjCnC,EAAMiC,EAAOG,WAAW,MAK9B,SAASC,IACPrC,EAAIsC,UAAU,EAAG,EAAGL,EAAOb,MAAOa,EAAOZ,QAEzCxB,EAAW0C,SAAQ,SAACC,EAAMC,GACxBD,EAAKE,SACLF,EAAKG,OAED9C,EAAW4C,GAAG7B,MAAQ,GACxBf,EAAW+C,OAAOH,EAAG,MAIzB7D,EAAMiE,sBAAsBR,GAhB9BpC,KAAKD,IAAMA,EACXiC,EAAOb,MAAQ,IACfa,EAAOZ,OAAS,IAiBhBgB,KAEFS,UAAS,WACPC,qBAAqBnE,M,SEpFzB,MAAMoE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS9D,GAAQ,CAAC,YAAY,qBAEzF","sources":["webpack://vue-default-ts/./src/pages/AnimateWithSound.vue?bdd1","webpack://vue-default-ts/./src/pages/AnimateWithSound.vue?163d","webpack://vue-default-ts/./src/pages/AnimateWithSound.vue"],"sourcesContent":["\nimport { defineComponent } from \"vue\";\n\nlet raf: number;\nconst explosions: Explosion[] = [];\nclass Explosion {\n  spriteWidth = 200;\n  spriteHeight = 179;\n  width = this.spriteWidth / 2;\n  height = this.spriteHeight / 2;\n  image = new Image();\n  frame = 0;\n  timer = 0;\n  angle = Math.random() * 6.2;\n  sound = new Audio(\"./resourses/sounds/Fire impact 1.wav\");\n\n  constructor(\n    public x: number,\n    public y: number,\n    public ctx: CanvasRenderingContext2D\n  ) {\n    this.image.src = \"./resourses/sprites/boom.png\";\n    this.sound.volume = 0.2;\n  }\n\n  update() {\n    if (this.frame === 0) this.sound.play();\n    this.timer++;\n    if (this.timer % 10 === 0) {\n      this.frame++;\n    }\n  }\n\n  draw() {\n    this.ctx.save();\n    this.ctx.translate(this.x, this.y);\n    this.ctx.rotate(this.angle);\n    this.ctx.drawImage(\n      this.image,\n      this.spriteWidth * this.frame,\n      0,\n      this.spriteWidth,\n      this.spriteHeight,\n      0 - this.width / 2,\n      0 - this.height / 2,\n      this.width,\n      this.height\n    );\n    this.ctx.restore();\n  }\n}\n\nexport default defineComponent({\n  data() {\n    return {\n      ctx: null as CanvasRenderingContext2D | null,\n    };\n  },\n  methods: {\n    showExplosion(e: MouseEvent) {\n      console.log(\"explosions\", explosions);\n      if (this.ctx) {\n        explosions.push(new Explosion(e.offsetX, e.offsetY, this.ctx));\n      }\n    },\n  },\n  mounted() {\n    const canvas = document.getElementById(\"canvas1\") as HTMLCanvasElement;\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    this.ctx = ctx;\n    canvas.width = 500;\n    canvas.height = 500;\n\n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      explosions.forEach((item, i) => {\n        item.update();\n        item.draw();\n\n        if (explosions[i].frame > 5) {\n          explosions.splice(i, 1);\n        }\n      });\n\n      raf = requestAnimationFrame(animate);\n    }\n\n    animate();\n  },\n  unmounted() {\n    cancelAnimationFrame(raf);\n  },\n});\n","import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-529907dd\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"container\" }, [\n  /*#__PURE__*/_createTextVNode(\" click to see boom effect with sound\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\"Осторожно минус уши \")\n], -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"canvas\", {\n      onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.showExplosion && _ctx.showExplosion(...args))),\n      id: \"canvas1\"\n    })\n  ]))\n}","import { render } from \"./AnimateWithSound.vue?vue&type=template&id=529907dd&scoped=true&ts=true\"\nimport script from \"./AnimateWithSound.vue?vue&type=script&lang=ts\"\nexport * from \"./AnimateWithSound.vue?vue&type=script&lang=ts\"\n\nimport \"./AnimateWithSound.vue?vue&type=style&index=0&id=529907dd&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/runner/work/canvas-game-tutorial/canvas-game-tutorial/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-529907dd\"]])\n\nexport default __exports__"],"names":["raf","_withScopeId","n","_hoisted_1","_","class","render","_ctx","_cache","$props","$setup","$data","$options","onClick","showExplosion","args","id","explosions","x","y","ctx","this","spriteWidth","spriteHeight","Image","Math","random","Audio","image","src","sound","volume","frame","play","timer","save","translate","rotate","angle","drawImage","width","height","restore","data","methods","e","console","log","push","Explosion","offsetX","offsetY","mounted","canvas","document","getElementById","getContext","animate","clearRect","forEach","item","i","update","draw","splice","requestAnimationFrame","unmounted","cancelAnimationFrame","__exports__"],"sourceRoot":""}